// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: address.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_address_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_address_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "city.pb.h"
#include "street.pb.h"
#include "building.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_address_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_address_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_address_2eproto;
namespace address {
class Address;
struct AddressDefaultTypeInternal;
extern AddressDefaultTypeInternal _Address_default_instance_;
}  // namespace address
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace address {

// ===================================================================


// -------------------------------------------------------------------

class Address final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:address.Address) */ {
 public:
  inline Address() : Address(nullptr) {}
  ~Address() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Address(::google::protobuf::internal::ConstantInitialized);

  inline Address(const Address& from)
      : Address(nullptr, from) {}
  Address(Address&& from) noexcept
    : Address() {
    *this = ::std::move(from);
  }

  inline Address& operator=(const Address& from) {
    CopyFrom(from);
    return *this;
  }
  inline Address& operator=(Address&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Address& default_instance() {
    return *internal_default_instance();
  }
  static inline const Address* internal_default_instance() {
    return reinterpret_cast<const Address*>(
               &_Address_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Address& a, Address& b) {
    a.Swap(&b);
  }
  inline void Swap(Address* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Address* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Address* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Address>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Address& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Address& from) {
    Address::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Address* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "address.Address";
  }
  protected:
  explicit Address(::google::protobuf::Arena* arena);
  Address(::google::protobuf::Arena* arena, const Address& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCityFieldNumber = 1,
    kStreetFieldNumber = 2,
    kBuildingFieldNumber = 3,
  };
  // .city.City city = 1;
  bool has_city() const;
  void clear_city() ;
  const ::city::City& city() const;
  PROTOBUF_NODISCARD ::city::City* release_city();
  ::city::City* mutable_city();
  void set_allocated_city(::city::City* value);
  void unsafe_arena_set_allocated_city(::city::City* value);
  ::city::City* unsafe_arena_release_city();

  private:
  const ::city::City& _internal_city() const;
  ::city::City* _internal_mutable_city();

  public:
  // .street.Street street = 2;
  bool has_street() const;
  void clear_street() ;
  const ::street::Street& street() const;
  PROTOBUF_NODISCARD ::street::Street* release_street();
  ::street::Street* mutable_street();
  void set_allocated_street(::street::Street* value);
  void unsafe_arena_set_allocated_street(::street::Street* value);
  ::street::Street* unsafe_arena_release_street();

  private:
  const ::street::Street& _internal_street() const;
  ::street::Street* _internal_mutable_street();

  public:
  // .building.Building building = 3;
  bool has_building() const;
  void clear_building() ;
  const ::building::Building& building() const;
  PROTOBUF_NODISCARD ::building::Building* release_building();
  ::building::Building* mutable_building();
  void set_allocated_building(::building::Building* value);
  void unsafe_arena_set_allocated_building(::building::Building* value);
  ::building::Building* unsafe_arena_release_building();

  private:
  const ::building::Building& _internal_building() const;
  ::building::Building* _internal_mutable_building();

  public:
  // @@protoc_insertion_point(class_scope:address.Address)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 3,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::city::City* city_;
    ::street::Street* street_;
    ::building::Building* building_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_address_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Address

// .city.City city = 1;
inline bool Address::has_city() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.city_ != nullptr);
  return value;
}
inline const ::city::City& Address::_internal_city() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::city::City* p = _impl_.city_;
  return p != nullptr ? *p : reinterpret_cast<const ::city::City&>(::city::_City_default_instance_);
}
inline const ::city::City& Address::city() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:address.Address.city)
  return _internal_city();
}
inline void Address::unsafe_arena_set_allocated_city(::city::City* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.city_);
  }
  _impl_.city_ = reinterpret_cast<::city::City*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:address.Address.city)
}
inline ::city::City* Address::release_city() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::city::City* released = _impl_.city_;
  _impl_.city_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::city::City* Address::unsafe_arena_release_city() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:address.Address.city)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::city::City* temp = _impl_.city_;
  _impl_.city_ = nullptr;
  return temp;
}
inline ::city::City* Address::_internal_mutable_city() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.city_ == nullptr) {
    auto* p = CreateMaybeMessage<::city::City>(GetArena());
    _impl_.city_ = reinterpret_cast<::city::City*>(p);
  }
  return _impl_.city_;
}
inline ::city::City* Address::mutable_city() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::city::City* _msg = _internal_mutable_city();
  // @@protoc_insertion_point(field_mutable:address.Address.city)
  return _msg;
}
inline void Address::set_allocated_city(::city::City* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.city_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.city_ = reinterpret_cast<::city::City*>(value);
  // @@protoc_insertion_point(field_set_allocated:address.Address.city)
}

// .street.Street street = 2;
inline bool Address::has_street() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.street_ != nullptr);
  return value;
}
inline const ::street::Street& Address::_internal_street() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::street::Street* p = _impl_.street_;
  return p != nullptr ? *p : reinterpret_cast<const ::street::Street&>(::street::_Street_default_instance_);
}
inline const ::street::Street& Address::street() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:address.Address.street)
  return _internal_street();
}
inline void Address::unsafe_arena_set_allocated_street(::street::Street* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.street_);
  }
  _impl_.street_ = reinterpret_cast<::street::Street*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:address.Address.street)
}
inline ::street::Street* Address::release_street() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::street::Street* released = _impl_.street_;
  _impl_.street_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::street::Street* Address::unsafe_arena_release_street() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:address.Address.street)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::street::Street* temp = _impl_.street_;
  _impl_.street_ = nullptr;
  return temp;
}
inline ::street::Street* Address::_internal_mutable_street() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.street_ == nullptr) {
    auto* p = CreateMaybeMessage<::street::Street>(GetArena());
    _impl_.street_ = reinterpret_cast<::street::Street*>(p);
  }
  return _impl_.street_;
}
inline ::street::Street* Address::mutable_street() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::street::Street* _msg = _internal_mutable_street();
  // @@protoc_insertion_point(field_mutable:address.Address.street)
  return _msg;
}
inline void Address::set_allocated_street(::street::Street* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.street_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.street_ = reinterpret_cast<::street::Street*>(value);
  // @@protoc_insertion_point(field_set_allocated:address.Address.street)
}

// .building.Building building = 3;
inline bool Address::has_building() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.building_ != nullptr);
  return value;
}
inline const ::building::Building& Address::_internal_building() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::building::Building* p = _impl_.building_;
  return p != nullptr ? *p : reinterpret_cast<const ::building::Building&>(::building::_Building_default_instance_);
}
inline const ::building::Building& Address::building() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:address.Address.building)
  return _internal_building();
}
inline void Address::unsafe_arena_set_allocated_building(::building::Building* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.building_);
  }
  _impl_.building_ = reinterpret_cast<::building::Building*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:address.Address.building)
}
inline ::building::Building* Address::release_building() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::building::Building* released = _impl_.building_;
  _impl_.building_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::building::Building* Address::unsafe_arena_release_building() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:address.Address.building)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::building::Building* temp = _impl_.building_;
  _impl_.building_ = nullptr;
  return temp;
}
inline ::building::Building* Address::_internal_mutable_building() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.building_ == nullptr) {
    auto* p = CreateMaybeMessage<::building::Building>(GetArena());
    _impl_.building_ = reinterpret_cast<::building::Building*>(p);
  }
  return _impl_.building_;
}
inline ::building::Building* Address::mutable_building() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::building::Building* _msg = _internal_mutable_building();
  // @@protoc_insertion_point(field_mutable:address.Address.building)
  return _msg;
}
inline void Address::set_allocated_building(::building::Building* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.building_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.building_ = reinterpret_cast<::building::Building*>(value);
  // @@protoc_insertion_point(field_set_allocated:address.Address.building)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace address


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_address_2eproto_2epb_2eh
